<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="762" onload="init(evt)" viewBox="0 0 1200 762" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="762" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --subprocesses -o benchmark.svg -- python py/bench_vmap.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="751.00"> </text><svg id="frames" x="10" width="1180" total_samples="1636"><g><title>&lt;module&gt; (torch/__init__.py:1489) (2 samples, 0.12%)</title><rect x="0.3667%" y="180" width="0.1222%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="2"/><text x="0.6167%" y="190.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1595) (2 samples, 0.12%)</title><rect x="0.5501%" y="180" width="0.1222%" height="15" fill="rgb(217,0,24)" fg:x="9" fg:w="2"/><text x="0.8001%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.12%)</title><rect x="0.5501%" y="196" width="0.1222%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="2"/><text x="0.8001%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.5501%" y="212" width="0.1222%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="2"/><text x="0.8001%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.5501%" y="228" width="0.1222%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="2"/><text x="0.8001%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.5501%" y="244" width="0.1222%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="2"/><text x="0.8001%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.5501%" y="260" width="0.1222%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="2"/><text x="0.8001%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.5501%" y="276" width="0.1222%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="2"/><text x="0.8001%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.5501%" y="292" width="0.1222%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="2"/><text x="0.8001%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/hub.py:17) (2 samples, 0.12%)</title><rect x="0.5501%" y="308" width="0.1222%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="2"/><text x="0.8001%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.5501%" y="324" width="0.1222%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="2"/><text x="0.8001%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.5501%" y="340" width="0.1222%" height="15" fill="rgb(240,193,28)" fg:x="9" fg:w="2"/><text x="0.8001%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.5501%" y="356" width="0.1222%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="2"/><text x="0.8001%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.5501%" y="372" width="0.1222%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="2"/><text x="0.8001%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.5501%" y="388" width="0.1222%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="2"/><text x="0.8001%" y="398.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (2 samples, 0.12%)</title><rect x="0.5501%" y="404" width="0.1222%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="2"/><text x="0.8001%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.5501%" y="420" width="0.1222%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="2"/><text x="0.8001%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.5501%" y="436" width="0.1222%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="2"/><text x="0.8001%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.5501%" y="452" width="0.1222%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="2"/><text x="0.8001%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.5501%" y="468" width="0.1222%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="2"/><text x="0.8001%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.5501%" y="484" width="0.1222%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="2"/><text x="0.8001%" y="494.50"></text></g><g><title>&lt;module&gt; (http/client.py:1395) (2 samples, 0.12%)</title><rect x="0.5501%" y="500" width="0.1222%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="2"/><text x="0.8001%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.5501%" y="516" width="0.1222%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="2"/><text x="0.8001%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.5501%" y="532" width="0.1222%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="2"/><text x="0.8001%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.5501%" y="548" width="0.1222%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="2"/><text x="0.8001%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.5501%" y="564" width="0.1222%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="2"/><text x="0.8001%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.5501%" y="580" width="0.1222%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="2"/><text x="0.8001%" y="590.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1634) (2 samples, 0.12%)</title><rect x="0.7946%" y="180" width="0.1222%" height="15" fill="rgb(238,160,17)" fg:x="13" fg:w="2"/><text x="1.0446%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.12%)</title><rect x="0.7946%" y="196" width="0.1222%" height="15" fill="rgb(214,148,48)" fg:x="13" fg:w="2"/><text x="1.0446%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.7946%" y="212" width="0.1222%" height="15" fill="rgb(232,36,49)" fg:x="13" fg:w="2"/><text x="1.0446%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.7946%" y="228" width="0.1222%" height="15" fill="rgb(209,103,24)" fg:x="13" fg:w="2"/><text x="1.0446%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.7946%" y="244" width="0.1222%" height="15" fill="rgb(229,88,8)" fg:x="13" fg:w="2"/><text x="1.0446%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.7946%" y="260" width="0.1222%" height="15" fill="rgb(213,181,19)" fg:x="13" fg:w="2"/><text x="1.0446%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.7946%" y="276" width="0.1222%" height="15" fill="rgb(254,191,54)" fg:x="13" fg:w="2"/><text x="1.0446%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.7946%" y="292" width="0.1222%" height="15" fill="rgb(241,83,37)" fg:x="13" fg:w="2"/><text x="1.0446%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/quantization/__init__.py:1) (2 samples, 0.12%)</title><rect x="0.7946%" y="308" width="0.1222%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="2"/><text x="1.0446%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.7946%" y="324" width="0.1222%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="2"/><text x="1.0446%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.7946%" y="340" width="0.1222%" height="15" fill="rgb(245,192,40)" fg:x="13" fg:w="2"/><text x="1.0446%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.7946%" y="356" width="0.1222%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="2"/><text x="1.0446%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.7946%" y="372" width="0.1222%" height="15" fill="rgb(232,182,51)" fg:x="13" fg:w="2"/><text x="1.0446%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.7946%" y="388" width="0.1222%" height="15" fill="rgb(231,60,39)" fg:x="13" fg:w="2"/><text x="1.0446%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/quantization/quantize.py:10) (2 samples, 0.12%)</title><rect x="0.7946%" y="404" width="0.1222%" height="15" fill="rgb(208,69,12)" fg:x="13" fg:w="2"/><text x="1.0446%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.7946%" y="420" width="0.1222%" height="15" fill="rgb(235,93,37)" fg:x="13" fg:w="2"/><text x="1.0446%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (2 samples, 0.12%)</title><rect x="0.7946%" y="436" width="0.1222%" height="15" fill="rgb(213,116,39)" fg:x="13" fg:w="2"/><text x="1.0446%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.7946%" y="452" width="0.1222%" height="15" fill="rgb(222,207,29)" fg:x="13" fg:w="2"/><text x="1.0446%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.7946%" y="468" width="0.1222%" height="15" fill="rgb(206,96,30)" fg:x="13" fg:w="2"/><text x="1.0446%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.7946%" y="484" width="0.1222%" height="15" fill="rgb(218,138,4)" fg:x="13" fg:w="2"/><text x="1.0446%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.7946%" y="500" width="0.1222%" height="15" fill="rgb(250,191,14)" fg:x="13" fg:w="2"/><text x="1.0446%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.7946%" y="516" width="0.1222%" height="15" fill="rgb(239,60,40)" fg:x="13" fg:w="2"/><text x="1.0446%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.7946%" y="532" width="0.1222%" height="15" fill="rgb(206,27,48)" fg:x="13" fg:w="2"/><text x="1.0446%" y="542.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1896) (2 samples, 0.12%)</title><rect x="0.9169%" y="180" width="0.1222%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="2"/><text x="1.1669%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.12%)</title><rect x="0.9169%" y="196" width="0.1222%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="2"/><text x="1.1669%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.9169%" y="212" width="0.1222%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="2"/><text x="1.1669%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="0.9169%" y="228" width="0.1222%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="2"/><text x="1.1669%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="0.9169%" y="244" width="0.1222%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="2"/><text x="1.1669%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="0.9169%" y="260" width="0.1222%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="2"/><text x="1.1669%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="0.9169%" y="276" width="0.1222%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="2"/><text x="1.1669%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="0.9169%" y="292" width="0.1222%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="2"/><text x="1.1669%" y="302.50"></text></g><g><title>impl (torch/library.py:161) (2 samples, 0.12%)</title><rect x="1.2225%" y="340" width="0.1222%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="2"/><text x="1.4725%" y="350.50"></text></g><g><title>&lt;module&gt; (torch/_meta_registrations.py:6253) (5 samples, 0.31%)</title><rect x="1.1002%" y="308" width="0.3056%" height="15" fill="rgb(227,1,9)" fg:x="18" fg:w="5"/><text x="1.3502%" y="318.50"></text></g><g><title>activate_meta (torch/_meta_registrations.py:6250) (4 samples, 0.24%)</title><rect x="1.1614%" y="324" width="0.2445%" height="15" fill="rgb(248,47,43)" fg:x="19" fg:w="4"/><text x="1.4114%" y="334.50"></text></g><g><title>getmodule (inspect.py:875) (3 samples, 0.18%)</title><rect x="1.4059%" y="692" width="0.1834%" height="15" fill="rgb(221,10,30)" fg:x="23" fg:w="3"/><text x="1.6559%" y="702.50"></text></g><g><title>getabsfile (inspect.py:845) (2 samples, 0.12%)</title><rect x="1.4670%" y="708" width="0.1222%" height="15" fill="rgb(210,229,1)" fg:x="24" fg:w="2"/><text x="1.7170%" y="718.50"></text></g><g><title>&lt;module&gt; (torch/_prims/__init__.py:3031) (6 samples, 0.37%)</title><rect x="1.4059%" y="596" width="0.3667%" height="15" fill="rgb(222,148,37)" fg:x="23" fg:w="6"/><text x="1.6559%" y="606.50"></text></g><g><title>register_debug_prims (torch/_prims/debug_prims.py:41) (6 samples, 0.37%)</title><rect x="1.4059%" y="612" width="0.3667%" height="15" fill="rgb(234,67,33)" fg:x="23" fg:w="6"/><text x="1.6559%" y="622.50"></text></g><g><title>inner (torch/_custom_op/impl.py:333) (6 samples, 0.37%)</title><rect x="1.4059%" y="628" width="0.3667%" height="15" fill="rgb(247,98,35)" fg:x="23" fg:w="6"/><text x="1.6559%" y="638.50"></text></g><g><title>_register_impl (torch/_custom_op/impl.py:223) (6 samples, 0.37%)</title><rect x="1.4059%" y="644" width="0.3667%" height="15" fill="rgb(247,138,52)" fg:x="23" fg:w="6"/><text x="1.6559%" y="654.50"></text></g><g><title>getframeinfo (inspect.py:1624) (6 samples, 0.37%)</title><rect x="1.4059%" y="660" width="0.3667%" height="15" fill="rgb(213,79,30)" fg:x="23" fg:w="6"/><text x="1.6559%" y="670.50"></text></g><g><title>findsource (inspect.py:952) (6 samples, 0.37%)</title><rect x="1.4059%" y="676" width="0.3667%" height="15" fill="rgb(246,177,23)" fg:x="23" fg:w="6"/><text x="1.6559%" y="686.50"></text></g><g><title>getmodule (inspect.py:878) (3 samples, 0.18%)</title><rect x="1.5892%" y="692" width="0.1834%" height="15" fill="rgb(230,62,27)" fg:x="26" fg:w="3"/><text x="1.8392%" y="702.50"></text></g><g><title>realpath (posixpath.py:396) (3 samples, 0.18%)</title><rect x="1.5892%" y="708" width="0.1834%" height="15" fill="rgb(216,154,8)" fg:x="26" fg:w="3"/><text x="1.8392%" y="718.50"></text></g><g><title>_joinrealpath (posixpath.py:431) (2 samples, 0.12%)</title><rect x="1.6504%" y="724" width="0.1222%" height="15" fill="rgb(244,35,45)" fg:x="27" fg:w="2"/><text x="1.9004%" y="734.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/__init__.py:244) (7 samples, 0.43%)</title><rect x="1.4059%" y="404" width="0.4279%" height="15" fill="rgb(251,115,12)" fg:x="23" fg:w="7"/><text x="1.6559%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.43%)</title><rect x="1.4059%" y="420" width="0.4279%" height="15" fill="rgb(240,54,50)" fg:x="23" fg:w="7"/><text x="1.6559%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.43%)</title><rect x="1.4059%" y="436" width="0.4279%" height="15" fill="rgb(233,84,52)" fg:x="23" fg:w="7"/><text x="1.6559%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.43%)</title><rect x="1.4059%" y="452" width="0.4279%" height="15" fill="rgb(207,117,47)" fg:x="23" fg:w="7"/><text x="1.6559%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.43%)</title><rect x="1.4059%" y="468" width="0.4279%" height="15" fill="rgb(249,43,39)" fg:x="23" fg:w="7"/><text x="1.6559%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.43%)</title><rect x="1.4059%" y="484" width="0.4279%" height="15" fill="rgb(209,38,44)" fg:x="23" fg:w="7"/><text x="1.6559%" y="494.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/decompositions.py:11) (7 samples, 0.43%)</title><rect x="1.4059%" y="500" width="0.4279%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="7"/><text x="1.6559%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.43%)</title><rect x="1.4059%" y="516" width="0.4279%" height="15" fill="rgb(242,79,21)" fg:x="23" fg:w="7"/><text x="1.6559%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.43%)</title><rect x="1.4059%" y="532" width="0.4279%" height="15" fill="rgb(211,96,35)" fg:x="23" fg:w="7"/><text x="1.6559%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.43%)</title><rect x="1.4059%" y="548" width="0.4279%" height="15" fill="rgb(253,215,40)" fg:x="23" fg:w="7"/><text x="1.6559%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.43%)</title><rect x="1.4059%" y="564" width="0.4279%" height="15" fill="rgb(211,81,21)" fg:x="23" fg:w="7"/><text x="1.6559%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.43%)</title><rect x="1.4059%" y="580" width="0.4279%" height="15" fill="rgb(208,190,38)" fg:x="23" fg:w="7"/><text x="1.6559%" y="590.50"></text></g><g><title>&lt;module&gt; (torch/_refs/__init__.py:1652) (2 samples, 0.12%)</title><rect x="1.8337%" y="500" width="0.1222%" height="15" fill="rgb(235,213,38)" fg:x="30" fg:w="2"/><text x="2.0837%" y="510.50"></text></g><g><title>inner (torch/_refs/__init__.py:1052) (2 samples, 0.12%)</title><rect x="1.8337%" y="516" width="0.1222%" height="15" fill="rgb(237,122,38)" fg:x="30" fg:w="2"/><text x="2.0837%" y="526.50"></text></g><g><title>decomposition_decorator (torch/_decomp/__init__.py:186) (2 samples, 0.12%)</title><rect x="1.8337%" y="532" width="0.1222%" height="15" fill="rgb(244,218,35)" fg:x="30" fg:w="2"/><text x="2.0837%" y="542.50"></text></g><g><title>tree_map_ (torch/utils/_pytree.py:933) (2 samples, 0.12%)</title><rect x="1.8337%" y="548" width="0.1222%" height="15" fill="rgb(240,68,47)" fg:x="30" fg:w="2"/><text x="2.0837%" y="558.50"></text></g><g><title>register (torch/_decomp/__init__.py:183) (2 samples, 0.12%)</title><rect x="1.8337%" y="564" width="0.1222%" height="15" fill="rgb(210,16,53)" fg:x="30" fg:w="2"/><text x="2.0837%" y="574.50"></text></g><g><title>_add_op_to_registry (torch/_decomp/__init__.py:51) (2 samples, 0.12%)</title><rect x="1.8337%" y="580" width="0.1222%" height="15" fill="rgb(235,124,12)" fg:x="30" fg:w="2"/><text x="2.0837%" y="590.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:1922) (18 samples, 1.10%)</title><rect x="1.0391%" y="180" width="1.1002%" height="15" fill="rgb(224,169,11)" fg:x="17" fg:w="18"/><text x="1.2891%" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (18 samples, 1.10%)</title><rect x="1.0391%" y="196" width="1.1002%" height="15" fill="rgb(250,166,2)" fg:x="17" fg:w="18"/><text x="1.2891%" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 1.10%)</title><rect x="1.0391%" y="212" width="1.1002%" height="15" fill="rgb(242,216,29)" fg:x="17" fg:w="18"/><text x="1.2891%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (18 samples, 1.10%)</title><rect x="1.0391%" y="228" width="1.1002%" height="15" fill="rgb(230,116,27)" fg:x="17" fg:w="18"/><text x="1.2891%" y="238.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (18 samples, 1.10%)</title><rect x="1.0391%" y="244" width="1.1002%" height="15" fill="rgb(228,99,48)" fg:x="17" fg:w="18"/><text x="1.2891%" y="254.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (18 samples, 1.10%)</title><rect x="1.0391%" y="260" width="1.1002%" height="15" fill="rgb(253,11,6)" fg:x="17" fg:w="18"/><text x="1.2891%" y="270.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (18 samples, 1.10%)</title><rect x="1.0391%" y="276" width="1.1002%" height="15" fill="rgb(247,143,39)" fg:x="17" fg:w="18"/><text x="1.2891%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 1.10%)</title><rect x="1.0391%" y="292" width="1.1002%" height="15" fill="rgb(236,97,10)" fg:x="17" fg:w="18"/><text x="1.2891%" y="302.50"></text></g><g><title>&lt;module&gt; (torch/_meta_registrations.py:9) (12 samples, 0.73%)</title><rect x="1.4059%" y="308" width="0.7335%" height="15" fill="rgb(233,208,19)" fg:x="23" fg:w="12"/><text x="1.6559%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.73%)</title><rect x="1.4059%" y="324" width="0.7335%" height="15" fill="rgb(216,164,2)" fg:x="23" fg:w="12"/><text x="1.6559%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.73%)</title><rect x="1.4059%" y="340" width="0.7335%" height="15" fill="rgb(220,129,5)" fg:x="23" fg:w="12"/><text x="1.6559%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.73%)</title><rect x="1.4059%" y="356" width="0.7335%" height="15" fill="rgb(242,17,10)" fg:x="23" fg:w="12"/><text x="1.6559%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.73%)</title><rect x="1.4059%" y="372" width="0.7335%" height="15" fill="rgb(242,107,0)" fg:x="23" fg:w="12"/><text x="1.6559%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.73%)</title><rect x="1.4059%" y="388" width="0.7335%" height="15" fill="rgb(251,28,31)" fg:x="23" fg:w="12"/><text x="1.6559%" y="398.50"></text></g><g><title>&lt;module&gt; (torch/_decomp/__init__.py:245) (5 samples, 0.31%)</title><rect x="1.8337%" y="404" width="0.3056%" height="15" fill="rgb(233,223,10)" fg:x="30" fg:w="5"/><text x="2.0837%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.31%)</title><rect x="1.8337%" y="420" width="0.3056%" height="15" fill="rgb(215,21,27)" fg:x="30" fg:w="5"/><text x="2.0837%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.31%)</title><rect x="1.8337%" y="436" width="0.3056%" height="15" fill="rgb(232,23,21)" fg:x="30" fg:w="5"/><text x="2.0837%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.31%)</title><rect x="1.8337%" y="452" width="0.3056%" height="15" fill="rgb(244,5,23)" fg:x="30" fg:w="5"/><text x="2.0837%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.31%)</title><rect x="1.8337%" y="468" width="0.3056%" height="15" fill="rgb(226,81,46)" fg:x="30" fg:w="5"/><text x="2.0837%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.31%)</title><rect x="1.8337%" y="484" width="0.3056%" height="15" fill="rgb(247,70,30)" fg:x="30" fg:w="5"/><text x="2.0837%" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:147) (2 samples, 0.12%)</title><rect x="4.5844%" y="372" width="0.1222%" height="15" fill="rgb(212,68,19)" fg:x="75" fg:w="2"/><text x="4.8344%" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.12%)</title><rect x="4.5844%" y="388" width="0.1222%" height="15" fill="rgb(240,187,13)" fg:x="75" fg:w="2"/><text x="4.8344%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="4.5844%" y="404" width="0.1222%" height="15" fill="rgb(223,113,26)" fg:x="75" fg:w="2"/><text x="4.8344%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="4.5844%" y="420" width="0.1222%" height="15" fill="rgb(206,192,2)" fg:x="75" fg:w="2"/><text x="4.8344%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="4.5844%" y="436" width="0.1222%" height="15" fill="rgb(241,108,4)" fg:x="75" fg:w="2"/><text x="4.8344%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="4.5844%" y="452" width="0.1222%" height="15" fill="rgb(247,173,49)" fg:x="75" fg:w="2"/><text x="4.8344%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="4.5844%" y="468" width="0.1222%" height="15" fill="rgb(224,114,35)" fg:x="75" fg:w="2"/><text x="4.8344%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="4.5844%" y="484" width="0.1222%" height="15" fill="rgb(245,159,27)" fg:x="75" fg:w="2"/><text x="4.8344%" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:25) (2 samples, 0.12%)</title><rect x="4.5844%" y="500" width="0.1222%" height="15" fill="rgb(245,172,44)" fg:x="75" fg:w="2"/><text x="4.8344%" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.12%)</title><rect x="4.5844%" y="516" width="0.1222%" height="15" fill="rgb(236,23,11)" fg:x="75" fg:w="2"/><text x="4.8344%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="4.5844%" y="532" width="0.1222%" height="15" fill="rgb(205,117,38)" fg:x="75" fg:w="2"/><text x="4.8344%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.12%)</title><rect x="4.5844%" y="548" width="0.1222%" height="15" fill="rgb(237,72,25)" fg:x="75" fg:w="2"/><text x="4.8344%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.12%)</title><rect x="4.5844%" y="564" width="0.1222%" height="15" fill="rgb(244,70,9)" fg:x="75" fg:w="2"/><text x="4.8344%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.12%)</title><rect x="4.5844%" y="580" width="0.1222%" height="15" fill="rgb(217,125,39)" fg:x="75" fg:w="2"/><text x="4.8344%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.12%)</title><rect x="4.5844%" y="596" width="0.1222%" height="15" fill="rgb(235,36,10)" fg:x="75" fg:w="2"/><text x="4.8344%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.12%)</title><rect x="4.5844%" y="612" width="0.1222%" height="15" fill="rgb(251,123,47)" fg:x="75" fg:w="2"/><text x="4.8344%" y="622.50"></text></g><g><title>&lt;module&gt; (bench_vmap.py:1) (73 samples, 4.46%)</title><rect x="0.3667%" y="84" width="4.4621%" height="15" fill="rgb(221,13,13)" fg:x="6" fg:w="73"/><text x="0.6167%" y="94.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (73 samples, 4.46%)</title><rect x="0.3667%" y="100" width="4.4621%" height="15" fill="rgb(238,131,9)" fg:x="6" fg:w="73"/><text x="0.6167%" y="110.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (73 samples, 4.46%)</title><rect x="0.3667%" y="116" width="4.4621%" height="15" fill="rgb(211,50,8)" fg:x="6" fg:w="73"/><text x="0.6167%" y="126.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (73 samples, 4.46%)</title><rect x="0.3667%" y="132" width="4.4621%" height="15" fill="rgb(245,182,24)" fg:x="6" fg:w="73"/><text x="0.6167%" y="142.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (73 samples, 4.46%)</title><rect x="0.3667%" y="148" width="4.4621%" height="15" fill="rgb(242,14,37)" fg:x="6" fg:w="73"/><text x="0.6167%" y="158.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (73 samples, 4.46%)</title><rect x="0.3667%" y="164" width="4.4621%" height="15" fill="rgb(246,228,12)" fg:x="6" fg:w="73"/><text x="0.6167%" y="174.50">_call..</text></g><g><title>&lt;module&gt; (torch/__init__.py:241) (44 samples, 2.69%)</title><rect x="2.1394%" y="180" width="2.6895%" height="15" fill="rgb(213,55,15)" fg:x="35" fg:w="44"/><text x="2.3894%" y="190.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (44 samples, 2.69%)</title><rect x="2.1394%" y="196" width="2.6895%" height="15" fill="rgb(209,9,3)" fg:x="35" fg:w="44"/><text x="2.3894%" y="206.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (44 samples, 2.69%)</title><rect x="2.1394%" y="212" width="2.6895%" height="15" fill="rgb(230,59,30)" fg:x="35" fg:w="44"/><text x="2.3894%" y="222.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:674) (44 samples, 2.69%)</title><rect x="2.1394%" y="228" width="2.6895%" height="15" fill="rgb(209,121,21)" fg:x="35" fg:w="44"/><text x="2.3894%" y="238.50">_l..</text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:571) (44 samples, 2.69%)</title><rect x="2.1394%" y="244" width="2.6895%" height="15" fill="rgb(220,109,13)" fg:x="35" fg:w="44"/><text x="2.3894%" y="254.50">mo..</text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1176) (44 samples, 2.69%)</title><rect x="2.1394%" y="260" width="2.6895%" height="15" fill="rgb(232,18,1)" fg:x="35" fg:w="44"/><text x="2.3894%" y="270.50">cr..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (44 samples, 2.69%)</title><rect x="2.1394%" y="276" width="2.6895%" height="15" fill="rgb(215,41,42)" fg:x="35" fg:w="44"/><text x="2.3894%" y="286.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.31%)</title><rect x="4.5232%" y="292" width="0.3056%" height="15" fill="rgb(224,123,36)" fg:x="74" fg:w="5"/><text x="4.7732%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.31%)</title><rect x="4.5232%" y="308" width="0.3056%" height="15" fill="rgb(240,125,3)" fg:x="74" fg:w="5"/><text x="4.7732%" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.31%)</title><rect x="4.5232%" y="324" width="0.3056%" height="15" fill="rgb(205,98,50)" fg:x="74" fg:w="5"/><text x="4.7732%" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.31%)</title><rect x="4.5232%" y="340" width="0.3056%" height="15" fill="rgb(205,185,37)" fg:x="74" fg:w="5"/><text x="4.7732%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.31%)</title><rect x="4.5232%" y="356" width="0.3056%" height="15" fill="rgb(238,207,15)" fg:x="74" fg:w="5"/><text x="4.7732%" y="366.50"></text></g><g><title>&lt;module&gt; (bench_vmap.py:13) (10 samples, 0.61%)</title><rect x="4.8289%" y="84" width="0.6112%" height="15" fill="rgb(213,199,42)" fg:x="79" fg:w="10"/><text x="5.0789%" y="94.50"></text></g><g><title>single_point_crossover_batch (bench_vmap.py:43) (2 samples, 0.12%)</title><rect x="5.4401%" y="116" width="0.1222%" height="15" fill="rgb(235,201,11)" fg:x="89" fg:w="2"/><text x="5.6901%" y="126.50"></text></g><g><title>time_fn (bench_vmap.py:17) (3 samples, 0.18%)</title><rect x="5.4401%" y="100" width="0.1834%" height="15" fill="rgb(207,46,11)" fg:x="89" fg:w="3"/><text x="5.6901%" y="110.50"></text></g><g><title>time_fn (bench_vmap.py:18) (2 samples, 0.12%)</title><rect x="5.6235%" y="100" width="0.1222%" height="15" fill="rgb(241,35,35)" fg:x="92" fg:w="2"/><text x="5.8735%" y="110.50"></text></g><g><title>synchronize (torch/cuda/__init__.py:792) (2 samples, 0.12%)</title><rect x="5.6235%" y="116" width="0.1222%" height="15" fill="rgb(243,32,47)" fg:x="92" fg:w="2"/><text x="5.8735%" y="126.50"></text></g><g><title>single_point_crossover_batch (bench_vmap.py:43) (2 samples, 0.12%)</title><rect x="5.8680%" y="116" width="0.1222%" height="15" fill="rgb(247,202,23)" fg:x="96" fg:w="2"/><text x="6.1180%" y="126.50"></text></g><g><title>single_point_crossover_batch (bench_vmap.py:46) (184 samples, 11.25%)</title><rect x="5.9902%" y="116" width="11.2469%" height="15" fill="rgb(219,102,11)" fg:x="98" fg:w="184"/><text x="6.2402%" y="126.50">single_point_cros..</text></g><g><title>single_point_crossover_batch (bench_vmap.py:49) (4 samples, 0.24%)</title><rect x="17.2372%" y="116" width="0.2445%" height="15" fill="rgb(243,110,44)" fg:x="282" fg:w="4"/><text x="17.4872%" y="126.50"></text></g><g><title>single_point_crossover_batch (bench_vmap.py:51) (186 samples, 11.37%)</title><rect x="17.4817%" y="116" width="11.3692%" height="15" fill="rgb(222,74,54)" fg:x="286" fg:w="186"/><text x="17.7317%" y="126.50">single_point_cros..</text></g><g><title>single_point_crossover_batch (bench_vmap.py:53) (457 samples, 27.93%)</title><rect x="28.8509%" y="116" width="27.9340%" height="15" fill="rgb(216,99,12)" fg:x="472" fg:w="457"/><text x="29.1009%" y="126.50">single_point_crossover_batch (bench_vmap.py:5..</text></g><g><title>single_point_crossover_batch (bench_vmap.py:55) (316 samples, 19.32%)</title><rect x="56.7848%" y="116" width="19.3154%" height="15" fill="rgb(226,22,26)" fg:x="929" fg:w="316"/><text x="57.0348%" y="126.50">single_point_crossover_batch (..</text></g><g><title>time_fn (bench_vmap.py:21) (1,334 samples, 81.54%)</title><rect x="5.7457%" y="100" width="81.5403%" height="15" fill="rgb(217,163,10)" fg:x="94" fg:w="1334"/><text x="5.9957%" y="110.50">time_fn (bench_vmap.py:21)</text></g><g><title>single_point_crossover_batch (bench_vmap.py:57) (183 samples, 11.19%)</title><rect x="76.1002%" y="116" width="11.1858%" height="15" fill="rgb(213,25,53)" fg:x="1245" fg:w="183"/><text x="76.3502%" y="126.50">single_point_cro..</text></g><g><title>all (1,636 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(252,105,26)" fg:x="0" fg:w="1636"/><text x="0.2500%" y="62.50"></text></g><g><title>process 156164:&quot;&quot; (1,636 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(220,39,43)" fg:x="0" fg:w="1636"/><text x="0.2500%" y="78.50">process 156164:&quot;&quot;</text></g><g><title>&lt;module&gt; (bench_vmap.py:73) (1,547 samples, 94.56%)</title><rect x="5.4401%" y="84" width="94.5599%" height="15" fill="rgb(229,68,48)" fg:x="89" fg:w="1547"/><text x="5.6901%" y="94.50">&lt;module&gt; (bench_vmap.py:73)</text></g><g><title>time_fn (bench_vmap.py:22) (208 samples, 12.71%)</title><rect x="87.2861%" y="100" width="12.7139%" height="15" fill="rgb(252,8,32)" fg:x="1428" fg:w="208"/><text x="87.5361%" y="110.50">time_fn (bench_vmap..</text></g><g><title>synchronize (torch/cuda/__init__.py:792) (208 samples, 12.71%)</title><rect x="87.2861%" y="116" width="12.7139%" height="15" fill="rgb(223,20,43)" fg:x="1428" fg:w="208"/><text x="87.5361%" y="126.50">synchronize (torch/..</text></g></svg></svg>